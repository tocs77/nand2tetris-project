@256  //Bootstrap code
D=A
@SP
M=D
@Sys.init$ret.0.6508059116687559 
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init$ret.0.6508059116687559)
//Main.vm
(Main.fibonacci) // function Main.fibonacci 0
D=0
@0 // push argument 0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // lt
M=M-1
@SP
A=M
D=M
@SP
A=M
A=A-1
D=M-D
@trueLabel0.05644253528879761
D;JLT
@0
D=A
@writeResultLabel0.7753776826853127
0;JMP
(trueLabel0.05644253528879761)
@0
D=A
D=D-1
(writeResultLabel0.7753776826853127)
@SP
A=M
A=A-1
M=D
@SP // if-goto N_LT_2
AM=M-1
D=M
@Main.vm.N_LT_2
D;JNE
@Main.vm.N_GE_2 // goto N_GE_2
0;JMP
(Main.vm.N_LT_2) // label N_LT_2
@0 // push argument 0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL // return
D=M
@R13
M=D
@5
D=A
@R13
A=M-D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
A=M-D
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
(Main.vm.N_GE_2) // label N_GE_2
@0 // push argument 0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2 // push constant 2
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // sub
M=M-1
@SP
A=M
D=M
@SP
A=M
A=A-1
M=M-D
@Main.fibonacci$ret.0.2009186723210057 // call Main.fibonacci 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.0.2009186723210057)
@0 // push argument 0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1 // push constant 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP // sub
M=M-1
@SP
A=M
D=M
@SP
A=M
A=A-1
M=M-D
@Main.fibonacci$ret.0.8048799313194752 // call Main.fibonacci 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.0.8048799313194752)
@SP // add
M=M-1
@SP
A=M
D=M
@SP
A=M
A=A-1
M=M+D
@LCL // return
D=M
@R13
M=D
@5
D=A
@R13
A=M-D
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
A=M-D
D=M
@THAT
M=D
@2
D=A
@R13
A=M-D
D=M
@THIS
M=D
@3
D=A
@R13
A=M-D
D=M
@ARG
M=D
@4
D=A
@R13
A=M-D
D=M
@LCL
M=D
@R14
A=M
0;JMP
//Sys.vm
(Sys.init) // function Sys.init 0
D=0
@4 // push constant 4
D=A
@SP
A=M
M=D
@SP
M=M+1
@Main.fibonacci$ret.0.7646227175679703 // call Main.fibonacci 1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@5
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacci$ret.0.7646227175679703)
(Sys.vm.END) // label END
@Sys.vm.END // goto END
0;JMP
